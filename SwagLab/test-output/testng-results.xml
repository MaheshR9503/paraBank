<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="41663" started-at="2022-12-29T16:05:45 IST" finished-at="2022-12-29T16:06:27 IST">
    <groups>
    </groups>
    <test name="Test1" duration-ms="25940" started-at="2022-12-29T16:05:45 IST" finished-at="2022-12-29T16:06:11 IST">
      <class name="com.Tests.LoginTest">
        <test-method status="PASS" signature="openBrowser(java.lang.String)[pri:0, instance:com.Tests.LoginTest@32cf48b7]" name="openBrowser" is-config="true" duration-ms="14733" started-at="2022-12-29T16:05:45 IST" finished-at="2022-12-29T16:06:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="checkLogo()[pri:1, instance:com.Tests.LoginTest@32cf48b7]" name="checkLogo" duration-ms="208" started-at="2022-12-29T16:06:00 IST" finished-at="2022-12-29T16:06:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogo -->
        <test-method status="PASS" signature="getScreenshot()[pri:0, instance:com.Tests.LoginTest@32cf48b7]" name="getScreenshot" is-config="true" duration-ms="323" started-at="2022-12-29T16:06:00 IST" finished-at="2022-12-29T16:06:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="login()[pri:2, instance:com.Tests.LoginTest@32cf48b7]" name="login" duration-ms="5860" started-at="2022-12-29T16:06:01 IST" finished-at="2022-12-29T16:06:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="getScreenshot()[pri:0, instance:com.Tests.LoginTest@32cf48b7]" name="getScreenshot" is-config="true" duration-ms="365" started-at="2022-12-29T16:06:07 IST" finished-at="2022-12-29T16:06:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="closewindow()[pri:0, instance:com.Tests.LoginTest@32cf48b7]" name="closewindow" is-config="true" duration-ms="4328" started-at="2022-12-29T16:06:07 IST" finished-at="2022-12-29T16:06:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closewindow -->
      </class> <!-- com.Tests.LoginTest -->
    </test> <!-- Test1 -->
    <test name="Test3" duration-ms="15306" started-at="2022-12-29T16:06:11 IST" finished-at="2022-12-29T16:06:27 IST">
      <class name="com.Tests.LoginTest">
        <test-method status="PASS" signature="openBrowser(java.lang.String)[pri:0, instance:com.Tests.LoginTest@1c72da34]" name="openBrowser" is-config="true" duration-ms="11997" started-at="2022-12-29T16:06:11 IST" finished-at="2022-12-29T16:06:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="checkLogo()[pri:1, instance:com.Tests.LoginTest@1c72da34]" name="checkLogo" duration-ms="195" started-at="2022-12-29T16:06:23 IST" finished-at="2022-12-29T16:06:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogo -->
        <test-method status="PASS" signature="getScreenshot()[pri:0, instance:com.Tests.LoginTest@1c72da34]" name="getScreenshot" is-config="true" duration-ms="572" started-at="2022-12-29T16:06:24 IST" finished-at="2022-12-29T16:06:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="login()[pri:2, instance:com.Tests.LoginTest@1c72da34]" name="login" duration-ms="1276" started-at="2022-12-29T16:06:24 IST" finished-at="2022-12-29T16:06:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="getScreenshot()[pri:0, instance:com.Tests.LoginTest@1c72da34]" name="getScreenshot" is-config="true" duration-ms="1197" started-at="2022-12-29T16:06:25 IST" finished-at="2022-12-29T16:06:27 IST">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-HFUG0EO', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [ca7bf769f4c2e25f9b2a52cb7547499e, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 108.0.1462.54, ms:edgeOptions: {debuggerAddress: localhost:1868}, msedge: {msedgedriverVersion: 108.0.1462.54 (c2998c8c6617..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:1868/devtool..., se:cdpVersion: 108.0.1462.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ca7bf769f4c2e25f9b2a52cb7547499e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-HFUG0EO', ip: '192.168.0.102', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [ca7bf769f4c2e25f9b2a52cb7547499e, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 108.0.1462.54, ms:edgeOptions: {debuggerAddress: localhost:1868}, msedge: {msedgedriverVersion: 108.0.1462.54 (c2998c8c6617..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:1868/devtool..., se:cdpVersion: 108.0.1462.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ca7bf769f4c2e25f9b2a52cb7547499e
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:606)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:331)
at com.util.Screenshot.takeScreenShot(Screenshot.java:20)
at com.Tests.LoginTest.getScreenshot(LoginTest.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="SKIP" signature="closewindow()[pri:0, instance:com.Tests.LoginTest@1c72da34]" name="closewindow" is-config="true" duration-ms="-1672310187162" started-at="2022-12-29T16:06:27 IST" finished-at="1970-01-01T05:30:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closewindow -->
      </class> <!-- com.Tests.LoginTest -->
    </test> <!-- Test3 -->
    <test name="Test2" duration-ms="41662" started-at="2022-12-29T16:05:45 IST" finished-at="2022-12-29T16:06:27 IST">
      <class name="com.Tests.LoginTest">
        <test-method status="PASS" signature="openBrowser(java.lang.String)[pri:0, instance:com.Tests.LoginTest@453da22c]" name="openBrowser" is-config="true" duration-ms="37902" started-at="2022-12-29T16:05:45 IST" finished-at="2022-12-29T16:06:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="checkLogo()[pri:1, instance:com.Tests.LoginTest@453da22c]" name="checkLogo" duration-ms="150" started-at="2022-12-29T16:06:23 IST" finished-at="2022-12-29T16:06:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLogo -->
        <test-method status="PASS" signature="getScreenshot()[pri:0, instance:com.Tests.LoginTest@453da22c]" name="getScreenshot" is-config="true" duration-ms="358" started-at="2022-12-29T16:06:23 IST" finished-at="2022-12-29T16:06:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="login()[pri:2, instance:com.Tests.LoginTest@453da22c]" name="login" duration-ms="1027" started-at="2022-12-29T16:06:24 IST" finished-at="2022-12-29T16:06:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="getScreenshot()[pri:0, instance:com.Tests.LoginTest@453da22c]" name="getScreenshot" is-config="true" duration-ms="407" started-at="2022-12-29T16:06:25 IST" finished-at="2022-12-29T16:06:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getScreenshot -->
        <test-method status="PASS" signature="closewindow()[pri:0, instance:com.Tests.LoginTest@453da22c]" name="closewindow" is-config="true" duration-ms="1762" started-at="2022-12-29T16:06:25 IST" finished-at="2022-12-29T16:06:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closewindow -->
      </class> <!-- com.Tests.LoginTest -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
